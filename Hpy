struct House {
    var Room: Int?
    var Square: Double
    var Pool: Bool?
    var HouseType: HouseType
    
    func describeHouse() -> String {
        var result = ""
        
        if let room = Room {
            result += "Rooms: \(room), "
        }
        
        result += "Type: \(HouseType.rawValue), "
        result += "Square: \(Square) sqm"
        
        if let pool = Pool {
            result += pool ? ", Pool: yes" : ", Pool: no"
        }
        
        return result
    }
}

// 2 FUNCTION
func describeHouse(house: House) -> String {
    var result = ""
    
    if let room = house.Room {
        result += "Rooms: \(room), "
    }
    
    result += "Type: \(house.HouseType.rawValue), "
    result += "Square: \(house.Square) sqm"
    
    if let pool = house.Pool {
        result += pool ? ", Pool: yes" : ", Pool: no"
    }
    
    return result
}

// 4 CLASS
class Owner {
    var Name: String = ""
    var HouseInfo: House
    
    init(Name: String, HouseInfo: House) {
        self.Name = Name
        self.HouseInfo = HouseInfo
    }
    
    func describeHouse() -> String {
        return "Owner: \(Name), " + HouseInfo.describeHouse()
    }
}

// 5 ENUM
enum HouseType: String {
    case apartment = "Apartment"
    case detached = "Detached"
    case semiDatached = "Semi-detached"
}


var house1 = House(Room: 2, Square: 134.7, Pool: true, HouseType: .apartment)
var house2 = House(Room: 3, Square: 200, Pool: true, HouseType: .detached)
var house3 = House(Room: 3, Square: 300, Pool: false, HouseType: .semiDatached)

var owner1 = Owner(Name: "Sofia", HouseInfo: house1)
print(owner1.describeHouse())

var owner2 = Owner(Name: "Olivia", HouseInfo: house2)
print(owner2.describeHouse())

var owner3 = Owner(Name: "Alex", HouseInfo: house3)
print(owner3.describeHouse())

let houses = [house1, house2, house3]

for c in houses {
    print(describeHouse(house: c))
}
